<Window x:Class="TexodeTask.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TexodeTask"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    
    
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
        </Style>
        
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                     Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="0.8*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="0.2*" />
        </Grid.RowDefinitions>

        
        <ListBox  x:Name="ListBox"
                 Grid.Column="0" ItemsSource="{Binding Path=Students}" AlternationCount="2" SelectionMode="Extended"
                 SelectedItem="{Binding SelectedStudent, Mode=TwoWay}" SelectionChanged="ListBox_SelectionChanged">
            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Setter Property="IsSelected" Value="{Binding SomeItemSelected, Mode=TwoWay}" />
                    <Setter Property="IsHitTestVisible" Value="False"/>
                    <Setter Property="Visibility" Value="{Binding HasItems, Mode=OneWay, Converter={StaticResource BoolToVisConverter}}"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems }" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="{Binding HasItems, Mode=OneWay, Converter={StaticResource BoolToVisConverter}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ageTextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=lastNameTextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=firstNameTextBox}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=GenderTextBox}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsHitTestVisible" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
            
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Margin" Value="5,3"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Background" Value="LightSteelBlue"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="brd" Background="{TemplateBinding Background}" 
                                         BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="Orange"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="BorderBrush" Value="Black"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel  Margin="5">
                        <TextBlock Text="{Binding Path=Name}" />
                        <TextBlock Text="{Binding Path=StringAge}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button x:Name="AddButton" Width="80" Command="{Binding AddCommand}">Добавить
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=ageTextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=lastNameTextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=firstNameTextBox}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=GenderTextBox}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button x:Name="DeleteButton" Width="80" Command="{Binding RemoveCommand}" IsEnabled="False" CommandParameter="{Binding  SelectedItems, ElementName=ListBox}">Удалить</Button>
        </StackPanel>

        
        <StackPanel x:Name="StackPanel" Visibility="Hidden" Grid.Column="1" DataContext="{Binding SelectedStudent}">
            <TextBlock Text="Имя" />
            <TextBox x:Name="firstNameTextBox">
                <TextBox.Text >
                    <Binding Path="FirstName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            <TextBlock Text="Фамилия" />
            <TextBox x:Name="lastNameTextBox">
                <TextBox.Text >
                    <Binding Path="Last" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            <TextBlock Text="Возраст" />
            <TextBox x:Name="ageTextBox">
            <TextBox.Text >
                    <Binding Path="Age" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule />
                        </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            </TextBox>
            
            <TextBlock Text="Пол" />
            <TextBox x:Name="GenderTextBox" ToolTip="Введите М или Ж">
                <TextBox.Text >
                    <Binding Path="Gender" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>
    </Grid>
</Window>
